// this file generates all css propertys that should go into the utility part of ITCSS
$property: accent-color;
$property-map: map-get($MapPropertys, '#{$property}');
$prefix: map-get($property-map, 'prefix');
$values: map-get($property-map, 'values');
/*#region #{$property}*/
@each $key, $val in $values {
	.u-#{$prefix}__#{$val} {
		#{$property}: #{$val};
	}
}
@each $key, $val in $MapColors {
	// @debug $val;
	$prefixc: map-get($val, 'prefix');
	// @debug $prefixc;
	$values: map-get($val, 'values');
	// @debug $values;
	@each $key, $val in $values {
		.u-#{$prefix}__#{$prefixc}--#{$key} {
			accent-color: #{$val};
		}
	}
}
/*#endregion #{$property}*/

$property: all;
$property-map: map-get($MapPropertys, '#{$property}');
$prefix: map-get($property-map, 'prefix');
$values: map-get($property-map, 'values');
/*#region #{$property}*/
@each $key, $val in $values {
	.u-#{$prefix}__#{$val} {
		#{$property}: #{$val};
	}
}

/*#endregion #{$property}*/

$property: animation;
$property-map: map-get($MapPropertys, '#{$property}');
$prefix: map-get($property-map, 'prefix');
$values: map-get($property-map, 'values');
/*#region #{$property}*/
@each $key, $val in $values {
	.u-#{$prefix}__#{$val} {
		#{$property}: #{$val};
	}
}

/*#endregion #{$property}*/
